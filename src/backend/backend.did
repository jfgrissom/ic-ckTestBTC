type Result = variant { Ok : nat; Err : text };
type TextResult = variant { Ok : text; Err : text };
type Transaction = record {
  id : nat64;
  to : text;
  status : TransactionStatus;
  token : text;
  block_index : opt nat;
  from : text;
  timestamp : nat64;
  tx_type : TransactionType;
  amount : nat;
};
type TransactionStatus = variant { Failed; Confirmed; Pending };
type TransactionType = variant { Withdraw; Mint; Deposit; Send; Receive };
service : {
  faucet : () -> (TextResult);
  get_balance : () -> (Result);
  get_btc_address : () -> (TextResult);
  get_deposit_address : () -> (TextResult);
  get_icp_address : () -> (text) query;
  get_icp_balance : () -> (Result);
  get_principal : () -> (principal) query;
  get_transaction : (nat64) -> (opt Transaction) query;
  get_transaction_history : () -> (vec Transaction) query;
  transfer_icp : (principal, nat) -> (Result);
  withdraw_testbtc : (text, nat) -> (TextResult);
}
